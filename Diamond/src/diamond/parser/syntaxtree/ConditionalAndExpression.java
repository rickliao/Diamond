//
// Generated by JTB 1.3.2
//

package diamond.parser.syntaxtree;

/**
 * Grammar production: valueLogical -> ValueLogical() nodeListOptional -> ( "&&"
 * ValueLogical() )*
 */
@SuppressWarnings("serial")
public class ConditionalAndExpression implements Node {

    public ValueLogical valueLogical;
    public NodeListOptional nodeListOptional;

    public ConditionalAndExpression(ValueLogical n0, NodeListOptional n1) {
        valueLogical = n0;
        nodeListOptional = n1;
    }

    @Override
    public void accept(diamond.parser.visitor.Visitor v) {
        v.visit(this);
    }

    @Override
    public <R, A> R accept(diamond.parser.visitor.GJVisitor<R, A> v, A argu) {
        return v.visit(this, argu);
    }

    @Override
    public <R> R accept(diamond.parser.visitor.GJNoArguVisitor<R> v) {
        return v.visit(this);
    }

    @Override
    public <A> void accept(diamond.parser.visitor.GJVoidVisitor<A> v, A argu) {
        v.visit(this, argu);
    }
}
