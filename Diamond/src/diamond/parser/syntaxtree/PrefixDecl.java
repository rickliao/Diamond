//
// Generated by JTB 1.3.2
//

package diamond.parser.syntaxtree;

/**
 * Grammar production: nodeToken -> <PREFIX> nodeToken1 -> <PNAME_NS> nodeToken2
 * -> <IRI_REF>
 */
@SuppressWarnings("serial")
public class PrefixDecl implements Node {

    public NodeToken nodeToken;
    public NodeToken nodeToken1;
    public NodeToken nodeToken2;

    public PrefixDecl(NodeToken n0, NodeToken n1, NodeToken n2) {
        nodeToken = n0;
        nodeToken1 = n1;
        nodeToken2 = n2;
    }

    public PrefixDecl() {
        nodeToken = new NodeToken("prefix");
        nodeToken1 = new NodeToken(":");
        nodeToken2 = new NodeToken(">");
    }

    @Override
    public void accept(diamond.parser.visitor.Visitor v) {
        v.visit(this);
    }

    @Override
    public <R, A> R accept(diamond.parser.visitor.GJVisitor<R, A> v, A argu) {
        return v.visit(this, argu);
    }

    @Override
    public <R> R accept(diamond.parser.visitor.GJNoArguVisitor<R> v) {
        return v.visit(this);
    }

    @Override
    public <A> void accept(diamond.parser.visitor.GJVoidVisitor<A> v, A argu) {
        v.visit(this, argu);
    }
}
